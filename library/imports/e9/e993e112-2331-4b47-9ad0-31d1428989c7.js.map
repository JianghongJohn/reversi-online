{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const Constants = require('Constants');\r\nconst GAME_STATE = Constants.GAME_STATE;\r\nconst STAND = Constants.STAND;\r\nconst CHESS_TYPE = Constants.CHESS_TYPE;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        gameState: {\r\n            default: GAME_STATE.PREPARE,\r\n            type: GAME_STATE\r\n        },\r\n        turn: {\r\n            default: STAND.BLACK,\r\n            type: STAND\r\n        },\r\n        blackScoreLabel: cc.Label,\r\n        whiteScoreLabel: cc.Label,\r\n        infoPanel: cc.Node,\r\n        infoLabel: cc.Label\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        G.gameManager = this;\r\n        this.infoAnimation = this.infoPanel.getComponent(cc.Animation);\r\n    },\r\n\r\n    startGame() {\r\n        this.turn = STAND.BLACK;\r\n        this.gameState = GAME_STATE.PLAYING;\r\n        this.showInfo('start game');\r\n    },\r\n\r\n    endGame() {\r\n        let onFinished = () =>{\r\n            G.roomSocket.disconnect();\r\n            cc.director.loadScene('menu');\r\n        }\r\n        this.infoAnimation.on('finished',onFinished,this);\r\n        this.gameState = GAME_STATE.OVER;\r\n        this.showInfo('game over');\r\n    },\r\n\r\n    changeTurn() {\r\n        if (this.turn === STAND.BLACK) {\r\n            this.turn = STAND.WHITE;\r\n        } else if (this.turn === STAND.WHITE) {\r\n            this.turn = STAND.BLACK;\r\n        }\r\n    },\r\n\r\n    forceChangeTurn() {//无子可下换边\r\n        this.showInfo('force change turn');\r\n        this.changeTurn();\r\n    },\r\n\r\n    updateScore() {\r\n        let chessCount = G.chessManager.getChessCount();\r\n        let blackChess = chessCount[0];\r\n        let whiteChess = chessCount[1];\r\n        this.blackScoreLabel.string = blackChess + '';\r\n        this.whiteScoreLabel.string = whiteChess + '';\r\n    },\r\n\r\n    showInfo(type) {\r\n        let chessCount = G.chessManager.getChessCount();\r\n        let blackChess = chessCount[0];\r\n        let whiteChess = chessCount[1];\r\n        if (type === 'start game') {\r\n            if (G.stand === STAND.BLACK) {\r\n                this.infoLabel.string = '你是蓝色方\\n执黑棋先手';\r\n            } else if (G.stand === STAND.WHITE) {\r\n                this.infoLabel.string = '你是红色方\\n执白棋后手';\r\n            }\r\n        } else if (type === 'game over') {\r\n            if (blackChess > whiteChess) {\r\n                this.infoLabel.string = '游戏结束\\n黑棋胜';\r\n            } else if (blackChess < whiteChess) {\r\n                this.infoLabel.string = '游戏结束\\n白棋胜';\r\n            } else if (blackChess === whiteChess) {\r\n                this.infoLabel.string = '游戏结束\\n平局';\r\n            }\r\n        } else if (type === 'force change turn') {\r\n            if (G.stand === STAND.BLACK) {\r\n                this.infoLabel.string = '黑方无子可下\\n请白方下子';\r\n            } else if (G.stand === STAND.WHITE) {\r\n                this.infoLabel.string = '白方无子可下\\n请黑方下子';\r\n            }\r\n        }\r\n        this.infoAnimation.play();\r\n    }\r\n\r\n});\r\n"
  ]
}